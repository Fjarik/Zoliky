@using SharedLibrary.Enums
@using SharedLibrary.Shared
@model ZolikyWeb.Areas.Admin.Models.User.UserModel

@{
	ViewBag.Title = "Uživatelé";
	Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="row">
	<div class="col">
		<div class="card">
			<div class="card-body">
				<div class="table-responsive">
					<table id="table-users" class="w-100 table table-striped table-bordered" ></table>
					@*<table id="table-usersa">
						<thead>
							<tr>
								<th>ID</th>
								<th>Jméno</th>
						<th>Email</th>
						<th>Třída</th>
						<th data-sort-ignore="true">Role</th>
						<th data-type="date">Datum registrace</th>
						<th data-type="date">Poslední přihlášení</th>
						<th data-sort-ignore="true">Akce</th>
							</tr>
						</thead>
						<tbody>
							<tr class="footable-empty">
						<td colspan="8">No results</td>
					</tr>
							@foreach (var user in Model.Users) {
								var cl = "text-dark";
								if (!user.IsEnabled) {
									cl = "text-warning";
								}
								if (user.IsBanned) {
									cl = "text-danger";
								}
							<tr class="@cl">
								<td data-value="@user.ID">
			@user.ID
		</td>
		<td>@user.FullName</td>
		<td>
			<a href="mailto:@user.Email" class="link">
				@user.Email
			</a>
		</td>
		@if (user.Class == null) {
			<td class="text-center NoSelect">
				-
			</td>
		} else {
			<td class="text-center">
				<span class="c-help" data-toggle="tooltip" data-original-title="@(user.Class?.Since.Year) - @(user.Class?.Graduation.Year)">
					@(user.Class?.Name)
				</span>
			</td>
		}
		<td>
			@foreach (var role in user.Roles) {
				var rName = role.Name;
				if (rName == UserRoles.Support) {
					continue;
				}
				var lbl = "primary";
				if (rName == UserRoles.Teacher) {
					lbl = "danger";
				} else if (rName == UserRoles.Developer) {
					lbl = "warning";
				} else if (rName == UserRoles.Tester) {
					lbl = "success";
				} else if (rName == UserRoles.Public) {
					lbl = "info";
				}
				lbl = $"label-{lbl}";
				<span class="c-help label @lbl" data-toggle="tooltip" data-original-title="@role.Description">
					@rName
				</span>
			}
		</td>
		<td data-value="@(user.MemberSince.GetJsTimestamp())">
			<span data-toggle="tooltip" data-original-title="@user.RegistrationIp">
				@(user.MemberSince.ToShortDateString())
			</span>
		</td>
		@{
			var t = "";
			var project = user.LastLogin?.ProjectID;
			if (project != null) {
				t = ((Projects) (int) project).GetDescription();
			}
		}
		<td data-value="@(user.LastLoginDate?.GetJsTimestamp())">
			<span class="c-help" data-toggle="tooltip" data-original-title="@t">
				@(user.LastLoginDate?.ToShortDateString())
			</span>
		</td>
		<td class="d-flex justify-content-around">
			@if (!user.IsInRolesOr(UserRoles.Administrator, UserRoles.Developer)) {
				<a href="@Url.Action("Edit", "User", new {Area = "Admin", id = user.ID})" data-toggle="tooltip" data-original-title="Upravit">
					<i class="fa fa-pencil text-inverse"></i>
				</a>
			}
			<a href="@Url.Action("Detail", "User", new {Area = "Admin", id = user.ID})" data-toggle="tooltip" data-original-title="Detaily">
				<i class="fa fa-eye text-inverse"></i>
			</a>
		</td>
							</tr>

						</tbody>
						<tfoot>
					<tr>
						<td colspan="7">
							<div class="text-right">
								<ul class="pagination"> </ul>
							</div>
						</td>
					</tr>
				</tfoot>
					</table>*@
				</div>
			</div>
		</div>
	</div>
</div>

@section footer {
	<script type="text/javascript">
		$(() => {

			$("#table-users").DataTable({
				ajax: {
					url: "@Url.Action("UsersJson")",
					dataSrc: ""
				},
				columns: [
					{
						title: "ID",
						type: "num",
						data: "id"
					},
					{
						title: "Jméno",
						type: "string",
						data: "fullname"
					},
					{
						title: "Email",
						type: "string",
						data: "email",
						render: (data) => {
							return `<a href="mailto:${data}" class="link">${data}</a>`;
						}
					},
					{
						title: "Třída",
						type: "html",
						className: "text-center",
						data: "class",
						render: (data) => {
							if (!data) {
								return "-";
							}
							return `<span class="c-help" data-toggle="tooltip" data-original-title="${data.since} - ${
								data.grad}">${data.name}</span>`;
						}
					},
					{
						title: "Role",
						data: "roles",
						type: "html",
						searchable: false,
						orderable: false,
						render: (data) => {
							let res = "";
							data.forEach((elm) => {
								res +=
									`<span class="c-help mr-1 label label-${elm.color
									}" data-toggle="tooltip" data-original-title="${elm.desc}">${elm.name}</span>`;
							});
							return res;
						}
					},
					{
						title: "Datum registrace",
						type: "html",
						data: "memberSince",
						searchable: false,
						render: {
							_: "timeS",
							display: (data) => {
								return `<span data-toggle="tooltip" data-original-title="${data.regIp}">${data.date
									}</span>`;
							}
						}
					},
					{
						title: "Poslední přihlášení",
						type: "html ",
						data: "lastLogin",
						searchable: false,
						render: {
							_: "timeS",
							display: (data) => {
								if (!data) {
									return "";
								}
								return `<span class="c-help" data-toggle="tooltip" data-original-title="${data.project
									}">${data.date}</span>`;
							}
						}

					},
					{
						title: "Akce",
						type: "html",
						data: "actions",
						className: "d-flex justify-content-around",
						orderable: false,
						searchable: false,
						render: (data) => {
							var res = "";
							if (data.edit) {
								res +=
									`<a href="${data.edit}" data-toggle="tooltip" data-original-title="Upravit">
												<i class="fa fa-pencil text-inverse"></i>
											</a>`;
							}
							res += `<a href="${data.display}" data-toggle="tooltip" data-original-title="Detaily">
											<i class="fa fa-eye text-inverse"></i>
										</a>`;
							return res;
						}
					}
				],
				language: {
					"lengthMenu": "Zobrazit _MENU_ záznamů na stránku",
					"zeroRecords": "Nebyly nalezeny žádné záznamy",
					"info": "Zobrazeno _START_ - _END_ z _TOTAL_ záznamů",
					"infoEmpty": "Záznamy nejsou dostupné",
					"thousands": " ",
					"infoFiltered": "(filtrováno z _MAX_ záznamů)",
					"search": "Vyhledávání:",
					"loadingRecords": "Načítání...",
					"paginate": {
						"first": "První",
						"last": "Poslední",
						"next": "Další",
						"previous": "Předchozí"
					},
					"aria": {
						"sortAscending": ": Seřadit vzestupně",
						"sortDescending": ": Seřadit sestupně"
					}
				},
				createdRow: (row, data) => {
					let cl = "text-dark";
					if (!data.IsEnabled) {
						cl = "text-warning";
					}
					if (data.IsBanned) {
						cl = "text-danger";
					}
					$(row).addClass(cl);
				},
				initComplete: () => {
					$('[data-toggle="tooltip"]').tooltip();
					console.log("DataTables: Data načtena");
				}
			});

		});
	</script>
}